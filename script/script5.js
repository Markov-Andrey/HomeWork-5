/*Внимание! Т.к. урок посвящен функциям, 
то для удобства вывода все функции с заданиями обернуты в 
дополнительные функции "function taskN", чтобы постоянно 
не переходить между страницами HTML и Scripts5.js
*/

//Task 1
function task1() {
	document.write(`Создаем функцию с 3-мя аргументами (number1...number3),
		в теле функции сразу же вызываем оператор return и
		возвращаем наше значение<br>
		(number1 - number2) / number3), обратите внимание на порядок действий согласно условию. <br><br>`)
	function numbers3(number1,number2,number3) {
		return document.write('(' + number1 + ' - ' + number2 + ') / ' + number3 + ' = ' + //запись примера текстом
		(number1 - number2) / number3) //само решение
	};
	numbers3(10,2,2);//аргументы функции
};

//Task 2
function task2() {
	document.write(`Ситуация аналогична предыдущему заданию, однако аргумент у функции один.<br>
		Переменную Х с помощью метода Math.pow возводим во 2-ю и 3-ю степень.<br>
		Полученные значения отображаем на экране.<br><br>`)
	function degree(x) {
		return document.write(`${x}<sup>2</sup> = ${Math.pow(x, 2)}<br>
			${x}<sup>3</sup> = ${Math.pow(x, 3)}<br>`)
	};
	degree(5);//аргумент функции
};

//Task 3
function task3() {
	document.write(`Сделано 3 разные функции:<ol><br>`);
		
	//Функция поиска максимального числа с 2 аргументами
	document.write(`<li>Поиск максимального числа из 2-х чисел:<br>
	(функция имеет 2 аргумента A и B, вводим для удобства переменную C,
	записываем в переменную C максимальное значение с
	помощью тернарного оператора (при этом равенство не проверяется),
	возвращаем с помощью оператора return переменную С)
	</li><ul>`);
	function max(a,b) {
		a > b ? c = document.write(`<li>${a}</li>`) : c = document.write(`<li>${b}</li>`);
		document.write (`<br></ul>`);
		return c;
	};
	max(10,5);
	
	//Функция поиска минимального числа с 2 аргументами
	document.write(`<li>Поиск минимального числа из 2-х чисел:<br>
	(разница с предыдущей функцией лишь в том, что используется знак "<");
	</li><ul>`);
	function min(a,b) {
		a < b ? c = document.write(`<li>${a}</li>`) : c = document.write(`<li>${b}</li>`);
		document.write (`<br></ul>`);
		return c;
	};
	min(10,5);
	
	//Функция сравнения 2 чисел
	document.write(`<li>Задание усложнено. Функция сравнивает 2 аргумента и выводит строку
		являются ли числа больше, меньше или равны между собой:<br>
	(проверка производится оператором if, сравнивается равенство A и B, 
	иначе проверяется A > B, в противном случае действует третий вариант.
	Для удобства в переменную С записываем только строковое значение "больше", "меньше", "равно".
	В документе выводим строку из переменных А и B с указанием равенства записанного в переменной C в сл.порядке [a-c-b]);
	</li><ul>`);
	function equal(a,b) {
		let c;
		if (Number(a) === Number(b)) {
			c = 'равно';
		} else if (Number(a) > Number(b)) {
			c = 'больше';
		} else {
			c = 'меньше';
		}
		document.write (`<li>${a} ${c} ${b}</li>`);
		return c;
	};
	equal(10,5);
	document.write(`</ul></ol>`);
};

//Task 4
//глобальные переменные вне функции
let arrayInput;
let arr = [];
//функция возврата строки пользователя и создания массива на основе разделителя пробела
function task4ArrayInput() {
	document.write(`Создано 2 глобальные переменные (arrayInput и arr = []), затем создано 2 функции:<br>
	<ol><li>
	Task4ArrayInput() - вовращает строку пользователя и задает массив значений с разделением через метод 
	split на основе пробела "arrayInput.split(' ')"
	</li><li>
	Task4ArrayOutput() - выводит массив через цикл for на экран с помощью таблицы, 
	предварительно обрабатывая взятые значения массива.
	</li></ol>
	<p>Сначала переписываем значение массива с помощью объекта Number(). 
	Затем проверяем с помощью тернарного оператора значение на тип "Not a Number" 
	с помощью метода Number.isNaN(), если значение массива не является NaN (NaN = false), 
	то показываем его.<br>
	(если не совсем ясна запись тернарного оператора в 
	комментариях скрыт аналог через логический оператор if)<br>
	<ul><li>
	В процессе отлова ошибок нашлось проскальзывающее в конечный массив значение 
	"бесконечность" (Infinity), дополнительно объявили проверку на это значение с помощью метода 
	Number.isFinite().
	</li><li>
	Ещё "баг" получался вводом множества пробелов подряд (они возвращались со значением 0, 
	что попадало в массив), решено использованием проверки if перед записью в массив, 
	условием является - значение не равно пустому, т.е. ' '
	</li></ul>`);
	arrayInput = prompt('Введите массив чисел через пробел');
	arr = arrayInput.split(' ');
};
//функция логической обработки и вывода массива
function task4ArrayOutput() {
	document.write(`<table><tr><td>Массив значений</td>`);
	for (let i = 0; i < arr.length; i++) {
		if (arr[i] !== '') {
			arr[i] = Number(arr[i]);
		}
		(Number.isNaN(arr[i]) == false) && (Number.isFinite(arr[i])) 
		? document.write(`<td>${arr[i]}</td>`) : false;
		//аналог написанного выше тернарного оператора через лог.оператор if:
		//if ((Number.isNaN(arr[i]) == false) && (Number.isFinite(arr[i]))){
		//document.write(`<td>${arr[i]}</td>`)}
	};
	document.write(`</tr></table>`);
};

//Task 5
function task5() {
	document.write(`Создаем функцию isEven с 1 аргументом(а),
		в теле функции создаем переменную result, с помощью тернарного оператора
		проверяем остаток деления на 2 ((a % 2) == 0), 
		в зависимости от результата присваиваем значение переменной result<br>
		Выводим с помощью оператора return значение переменной result, 
		приправленное текстом.<br>
		Для проверки вызвали функцию isEven() 2 раза с разными значениями аргумента - 5 и 10.<br><br>`)
	function isEven(a) {
		let result;
		(a % 2) == 0 ? result = true : result = false;
		return document.write(`<p>Число ${a} делится на 2?</p>
		<ul><li>${result}</li></ul>`);
	};
	isEven(5);
	isEven(10);
};
//Task 6
//Task 7
//Task 8
//Task 9
//Task 10
//Task 11
//Task 12
//Task 13